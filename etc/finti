#!/bin/sh
#
# 
#

. ../venv/bin/activate

SERVICE=`basename $0`.py
RED='\033[41m\033[30m'
GREEN='\033[42m\033[30m'
ATT_RESET='\033[0m'

TRUE=0
FALSE=1
RETVAL=$FALSE

status_nginx(){
    RETVAL=$FALSE
    if pgrep -f "nginx: master process" > /dev/null; then
		RETVAL=$TRUE
	fi
    return $RETVAL
}

status_uwsgi(){
	RETVAL=$FALSE
    if pgrep -f "uwsgi --ini uwsgi/emperor.ini" > /dev/null; then
		RETVAL=$TRUE
	fi
    return $RETVAL
}
			
status_all(){
	RETVAL=$FALSE
	
	if status_nginx; then
		echo "nginx:		${GREEN}running${ATT_RESET}"
		RETVAL=$TRUE
	else		
		echo "nginx:		${RED}not running${ATT_RESET}"
	fi

	if status_uwsgi; then
		echo "uwsgi emperor:	${GREEN}running${ATT_RESET}"
	else
		echo "uwsgi emperor:	${RED}not running${ATT_RESET}"
		RETVAL=$FALSE
	fi

	if [ $RETVAL -eq $FALSE ]; then
		echo "finti:		${RED}not running${ATT_RESET}"
	else
		echo "finti:		${GREEN}running${ATT_RESET}"
	fi	
	return $RETVAL
}
	
	
start() {
	RETVAL=$FALSE

	if status_nginx; then 
		echo "nginx was already ${GREEN}running${ATT_RESET}"
    else
		../nginx/sbin/nginx -c ../nginx/conf/nginx.conf
		if status_nginx; then
	    	echo "${GREEN}nginx has been started${ATT_RESET}"
	    	RETVAL=$TRUE
		else
			echo "${RED}nginx failed to start .. check the logs.${ATT_RESET}"
		fi
	fi
	
	if status_uwsgi; then 
		echo "uwsgi was already ${GREEN}running${ATT_RESET}"
    else
		uwsgi --ini uwsgi/emperor.ini
		if status_uwsgi; then
	    	echo "uwsgi emperor has been ${GREEN}started${ATT_RESET}"
		else
			echo "${RED}uwsgi emperor failed to start .. check the logs.${ATT_RESET}"
			RETVAL=$FALSE
		fi
	fi
	return $RETVAL
}

stop(){
	STATUS=$FALSE

	if status_nginx; then 
		../nginx/sbin/nginx -s stop
		if status_nginx; then
			echo "${RED}nginx failed to stop .. check the logs.${ATT_RESET}"
		else
			echo "nginx has been ${GREEN}stopped${ATT_RESET}"
	    	STATUS=$TRUE
		fi
    else
		echo "nginx:		${GREEN}not running${ATT_RESET}"
		STATUS=$TRUE
	fi

	if status_uwsgi; then 
		uwsgi --stop ../var/uwsgi_emperor.pid
		echo "waiting five seconds for the vassals to stop.."
		sleep 5
		if status_uwsgi; then
			echo "${RED}uwsgi emperor failed to stop .. check the logs.${ATT_RESET}"
			STATUS=$FALSE
		else
			echo "uwsgi emperor:	${GREEN}stopped${ATT_RESET}"
		fi
    else
		echo "uwsgi emperor:	${GREEN}not running${ATT_RESET}"
	fi
	
	if [ $STATUS -eq $TRUE ]; then
		echo "finti:		${GREEN}stopped${ATT_RESET}"
	else
		echo "finti has failed to ${RED}stop${ATT_RESET}"
	fi
			
	return $STATUS
}	

case "$1" in
    start)
        start
        ;;
    stop)
    	stop
    	;;
    restart)
		stop
        start
        ;;
    status)
		status_all
        ;;
    *)
        echo "Usage: $0 {start|stop|status|restart}" >&2
        RETVAL=1
        ;;
esac

exit $RETVAL
