#!/bin/sh
#
# 
#

. ../venv/bin/activate

SERVICE=`basename $0`.py

TRUE=0
FALSE=1
RETVAL=$FALSE

status_nginx(){
    RETVAL=$FALSE
    if pgrep -f "nginx: master process" > /dev/null; then
		RETVAL=$TRUE
	fi
    return $RETVAL
}

status_uwsgi(){
	RETVAL=$FALSE
    if pgrep -f "uwsgi --ini uwsgi.ini" > /dev/null; then
		RETVAL=$TRUE
	fi
    return $RETVAL
}
			
status_all(){
	RETVAL=$FALSE
	
	if status_nginx; then
		echo "nginx is running"
		RETVAL=$TRUE
	else		
		echo "nginx is not running"
	fi

	if status_uwsgi; then
		echo "uwsgi is running"
	else
		echo "uwsgi is not running"
		RETVAL=$FALSE
	fi

	if [ $RETVAL -eq $FALSE ]; then
		echo "finti is stopped"
	else
		echo "finti is not stopped"
	fi	
	return $RETVAL
}
	
	
start() {
	RETVAL=$FALSE

	if status_nginx; then 
		echo nginx was already running
    else
		../nginx/sbin/nginx -c ../nginx/conf/nginx.conf
		if status_nginx; then
	    	echo "nginx has been started"
	    	RETVAL=$TRUE
		else
			echo "nginx failed to start .. check the logs."
		fi
	fi
	
	if status_uwsgi; then 
		echo uwsgi was already running
    else
		uwsgi --ini uwsgi.ini
		if status_uwsgi; then
	    	echo uwsgi has been started
		else
			echo "uwsgi failed to start .. check the logs."
			RETVAL=$FALSE
		fi
	fi
	return $RETVAL
}

stop(){
	RETVAL=$FALSE

	if status_nginx; then 
		../nginx/sbin/nginx -s stop
		if status_nginx; then
			echo "nginx failed to stop .. check the logs."
	    		    	echo nginx has been started
		else
			echo "nginx has been stopped"
	    	RETVAL=$TRUE
		fi
    else
		echo nginx was not running
		RETVAL=$TRUE
	fi
	
	if status_uwsgi; then 
		uwsgi --stop ../var/uwsgi.pid
		if status_uwsgi; then
			echo "uwsgi failed to stop .. check the logs."
			RETVAL=$FALSE
		else
			echo "uwsgi has been stopped"
		fi
    else
		echo 'uwsgi was not running'
	fi
	
	if [ $RETVAL -eq $TRUE ]; then
		echo 'finti has been stopped'
	else
		echo 'finti has been stopped'
	fi
			
	return $RETVAL
}	

case "$1" in
    start)
        start
        ;;
    stop)
    	stop
    	;;
    restart)
		stop
        start
        ;;
    status)
		status_all
        ;;
    *)
        echo "Usage: $0 {start|stop|status|restart}" >&2
        RETVAL=1
        ;;
esac

exit $RETVAL
